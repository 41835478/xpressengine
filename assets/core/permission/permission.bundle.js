webpackJsonp([4],{

/***/ 308:
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(309);\n\n\n//////////////////\n// WEBPACK FOOTER\n// multi ./resources/assets/core/permission/permission.js\n// module id = 308\n// module chunks = 4\n\n//# sourceURL=webpack:///multi_./resources/assets/core/permission/permission.js?");

/***/ }),

/***/ 309:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Keys = {\n\tENTER: 13,\n\tTAB: 9,\n\tBACKSPACE: 8,\n\tUP_ARROW: 38,\n\tDOWN_ARROW: 40,\n\tESCAPE: 27\n};\n\nvar Permission = function () {\n\tfunction Permission(_ref) {\n\t\tvar $wrapper = _ref.$wrapper,\n\t\t    key = _ref.key,\n\t\t    memberSearchUrl = _ref.memberSearchUrl,\n\t\t    groupSearchUrl = _ref.groupSearchUrl,\n\t\t    permission = _ref.permission,\n\t\t    type = _ref.type,\n\t\t    vgroupAll = _ref.vgroupAll;\n\n\t\t_classCallCheck(this, Permission);\n\n\t\tthis.$wrapper = $wrapper;\n\t\tthis.key = key;\n\t\tthis.memberSearchUrl = memberSearchUrl;\n\t\tthis.groupSearchUrl = groupSearchUrl;\n\t\tthis.permission = permission;\n\t\tthis.type = type;\n\t\tthis.vgroupAll = vgroupAll;\n\t\tthis.query = '';\n\t\tthis.suggestion = [];\n\t\tthis.placeholder = XE.Lang.trans('xe::explainIncludeUserOrGroup');\n\t\tthis.includeSearchCnt = 0;\n\t\tthis.excludeSearchCnt = 0;\n\t\tthis.searchCnt = 0;\n\t\tthis.selectedIndex = '';\n\t\tthis.includeSelectedIndex = -1;\n\t\tthis.excludeSelectedIndex = -1;\n\t\tthis.MIN_QUERY_LENGTH = 2;\n\t}\n\n\t_createClass(Permission, [{\n\t\tkey: 'bindEvents',\n\t\tvalue: function bindEvents() {\n\t\t\tvar _this = this;\n\n\t\t\tthis.$wrapper.on('change', '.chkModeAble', function (e) {\n\t\t\t\tvar $target = $(e.target);\n\n\t\t\t\tvar checked = $target.is(':checked');\n\n\t\t\t\tif (checked) {\n\t\t\t\t\t_this.$wrapper.find('input:not(.chkModeAble)').prop('disabled', true);\n\t\t\t\t} else {\n\t\t\t\t\t_this.$wrapper.find('input:not(.chkModeAble)').prop('disabled', false);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.$wrapper.on('keydown', '.inputMemberGroup', function (e) {\n\t\t\t\tvar query = e.target.value.trim();\n\t\t\t\tvar $this = $(this);\n\t\t\t\tvar keyCode = e.keyCode;\n\t\t\t\tvar $ul = $this.parent().find('.ReactTags__suggestions ul');\n\t\t\t\tvar dataInput = $this.data('input'); //include, exclude\n\n\t\t\t\tif (query.length >= _this.MIN_QUERY_LENGTH) {\n\t\t\t\t\tif ($ul.length > 0) {\n\t\t\t\t\t\tvar index = parseInt($this.data('index'), 10);\n\t\t\t\t\t\tvar focusedIndex = 0;\n\n\t\t\t\t\t\tswitch (keyCode) {\n\t\t\t\t\t\t\tcase Keys.UP_ARROW:\n\t\t\t\t\t\t\t\tif (index == 0) {\n\t\t\t\t\t\t\t\t\tfocusedIndex = $ul.find('li').length - 1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfocusedIndex = index - 1;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$this.data('index', focusedIndex);\n\t\t\t\t\t\t\t\t$ul.find('li').eq(focusedIndex).addClass('active').siblings().removeClass('active');\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Keys.DOWN_ARROW:\n\t\t\t\t\t\t\t\tif (index == $ul.find('li').length - 1) {\n\t\t\t\t\t\t\t\t\tfocusedIndex = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfocusedIndex = index + 1;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$this.data('index', focusedIndex);\n\t\t\t\t\t\t\t\t$ul.find('li').eq(focusedIndex).addClass('active').siblings().removeClass('active');\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Keys.ENTER:\n\t\t\t\t\t\t\tcase Keys.TAB:\n\t\t\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t\t\tif ($ul.find('li.active').length > 0) {\n\t\t\t\t\t\t\t\t\tvar tag = $ul.find('li.active').data('tag');\n\t\t\t\t\t\t\t\t\tvar name = '';\n\t\t\t\t\t\t\t\t\tvar pType = '';\n\n\t\t\t\t\t\t\t\t\t//member\n\t\t\t\t\t\t\t\t\tif ($ul.data('target') == 'member') {\n\t\t\t\t\t\t\t\t\t\t//include\n\t\t\t\t\t\t\t\t\t\tif (dataInput == 'include') {\n\t\t\t\t\t\t\t\t\t\t\tname = _this.type + 'User';\n\t\t\t\t\t\t\t\t\t\t\tpType = 'user';\n\t\t\t\t\t\t\t\t\t\t\t//exclude\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tname = _this.type + 'Except';\n\t\t\t\t\t\t\t\t\t\t\tpType = 'except';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t//group\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tname = _this.type + 'Group';\n\t\t\t\t\t\t\t\t\t\tpType = 'group';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tvar pTypes = _this.permission[pType];\n\n\t\t\t\t\t\t\t\t\tif (pTypes.length > 0) {\n\t\t\t\t\t\t\t\t\t\tpTypes.forEach(function (id, i) {\n\t\t\t\t\t\t\t\t\t\t\tif (id !== tag.id) {\n\t\t\t\t\t\t\t\t\t\t\t\t_this.permission[pType].push(tag.id);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t_this.permission[pType].push(tag.id);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconsole.log('_this,permission[pType]', _this.permission[pType], 'name', name);\n\n\t\t\t\t\t\t\t\t\t$ul.closest('.ReactTags__tags').find('[name=' + name + ']').val(pTypes.join().trim());\n\t\t\t\t\t\t\t\t\t$ul.closest('.ReactTags__tags').find('.' + pType + 'Wrap').append('<span class=\"ReactTags__tag\">' + (tag.display_name || tag.name) + '<a class=\"ReactTags__remove\" data-id=\"' + tag.id + '\">x</a></span>');\n\n\t\t\t\t\t\t\t\t\t$ul.remove();\n\t\t\t\t\t\t\t\t\t$this.val('').data('index', -1).focus();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\te.preventDefault(); //prevent tab\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Keys.BACKSPACE:\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Keys.ESCAPE:\n\t\t\t\t\t\t\t\t_this[dataInput + 'SelectedIndex'] = 0;\n\t\t\t\t\t\t\t\t$ul.parent().empty();\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.$wrapper.find('.ReactTags__suggestions').on('mouseenter', 'li', function () {\n\t\t\t\tvar $this = $(this);\n\t\t\t\tvar $ul = $this.closest('ul');\n\t\t\t\tvar size = $ul.find('li').length;\n\n\t\t\t\t$this.addClass('active').siblings().removeClass('active');\n\t\t\t});\n\n\t\t\tthis.$wrapper.on('keyup', '.inputMemberGroup', function (e) {\n\t\t\t\tvar query = e.target.value.trim();\n\t\t\t\tvar $this = $(this);\n\t\t\t\tvar keyCode = e.keyCode;\n\n\t\t\t\tif (query.length >= _this.MIN_QUERY_LENGTH) {\n\n\t\t\t\t\tif ([Keys.ENTER, Keys.TAB, Keys.UP_ARROW, Keys.DOWN_ARROW, Keys.ESCAPE, 37, 39].indexOf(keyCode) == -1) {\n\t\t\t\t\t\tvar temp = '';\n\t\t\t\t\t\ttemp += '<ul>';\n\t\t\t\t\t\ttemp += '<li>Searching ... <span class=\"spinner\" role=\"spinner\"><span class=\"spinner-icon\"></span></span></li>';\n\t\t\t\t\t\ttemp += '</ul>';\n\n\t\t\t\t\t\t$this.parent().find('.ReactTags__suggestions').html(temp);\n\n\t\t\t\t\t\tvar identifier = query.substr(0, 1);\n\t\t\t\t\t\tswitch (identifier) {\n\t\t\t\t\t\t\tcase '@':\n\t\t\t\t\t\t\t\tquery = query.substr(1, query.length);\n\t\t\t\t\t\t\t\t_this.searchMember($this, query);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase '%':\n\t\t\t\t\t\t\t\tquery = query.substr(1, query.length);\n\t\t\t\t\t\t\t\t_this.searchGroup($this, query);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$this.parent().find('.ReactTags__suggestions').empty();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.$wrapper.on('keydownaa', '.inputInclude', function (e) {\n\t\t\t\t// var _state = this.state;\n\t\t\t\tvar query = _this.query;\n\t\t\t\tvar selectedIndex = _this.selectedIndex;\n\t\t\t\tvar suggestions = _this.suggestions;\n\n\t\t\t\t// hide suggestions menu on escape\n\t\t\t\tif (e.keyCode === Keys.ESCAPE) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tselectedIndex: -1,\n\t\t\t\t\t\tselectionMode: false,\n\t\t\t\t\t\tsuggestions: []\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// when enter or tab is pressed add query to tags\n\t\t\t\tif ((e.keyCode === Keys.ENTER || e.keyCode === Keys.TAB) && query != '') {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (this.state.selectionMode) {\n\t\t\t\t\t\tthis.addTag(this.state.suggestions[this.state.selectedIndex]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// when backspace key is pressed and query is blank, delete tag\n\t\t\t\tif (e.keyCode === Keys.BACKSPACE && query == '') {\n\t\t\t\t\tif (this.props.selectedMember.length > 0) this.handleMemberDelete(this.props.selectedMember.length - 1);else this.handleGroupDelete(this.props.selectedGroup.length - 1);\n\t\t\t\t}\n\n\t\t\t\t// up arrow\n\t\t\t\tif (e.keyCode === Keys.UP_ARROW) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t// last item, cycle to the top\n\t\t\t\t\tif (selectedIndex <= 0) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tselectedIndex: this.state.suggestions.length - 1,\n\t\t\t\t\t\t\tselectionMode: true\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tselectedIndex: selectedIndex - 1,\n\t\t\t\t\t\t\tselectionMode: true\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// down arrow\n\t\t\t\tif (e.keyCode === Keys.DOWN_ARROW) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tselectedIndex: (this.state.selectedIndex + 1) % suggestions.length,\n\t\t\t\t\t\tselectionMode: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'addTag',\n\t\tvalue: function addTag() {}\n\t}, {\n\t\tkey: 'makeIt',\n\t\tvalue: function makeIt(item, query) {\n\t\t\tvar escapedRegex = query.trim().replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\tvar r = RegExp(escapedRegex, 'gi');\n\t\t\tvar itemName = item.display_name || item.name;\n\n\t\t\treturn itemName.replace(r, '<mark>$&</mark>');\n\t\t}\n\t}, {\n\t\tkey: 'searchMember',\n\t\tvalue: function searchMember($input, keyword) {\n\t\t\tvar _this = this;\n\t\t\tvar searchMemberUrl = _this.memberSearchUrl;\n\n\t\t\t// var searchingCnt = this.state.searchingCnt + 1;\n\t\t\t// _this.setState({\n\t\t\t// \tsearchingCnt: searchingCnt,\n\t\t\t// });\n\n\t\t\tconsole.log(keyword);\n\n\t\t\t$.ajax({\n\t\t\t\turl: searchMemberUrl + '/' + keyword,\n\t\t\t\tmethod: 'get',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tsuccess: function success(data) {\n\n\t\t\t\t\tif (data.length > 0) {\n\t\t\t\t\t\tvar temp = '';\n\t\t\t\t\t\ttemp += '<ul data-target=\"member\">';\n\n\t\t\t\t\t\tdata.forEach(function (item, i) {\n\t\t\t\t\t\t\t/**\n        * TODO :: li event\n        * PermissionTagSuggestion handleClick click\n        * PermissionTagSuggestion handleHover mouseover\n        * */\n\t\t\t\t\t\t\t// temp += \t\t`<li class=\"${i == _this.selectedIndex ? 'active' : '' }\">`;\n\t\t\t\t\t\t\ttemp += '<li class=\"\" data-tag=\\'' + JSON.stringify(item) + '\\'>';\n\t\t\t\t\t\t\ttemp += '<span>' + _this.makeIt(item, keyword) + '</span>';\n\t\t\t\t\t\t\ttemp += '</li>';\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\ttemp += '</ul>';\n\n\t\t\t\t\t\t$input.parent().find('.ReactTags__suggestions').html(temp);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$input.parent().find('.ReactTags__suggestions').empty();\n\t\t\t\t\t}\n\n\t\t\t\t\t// var searchingCnt = _this.state.searchingCnt;\n\t\t\t\t\t// searchingCnt = searchingCnt - 1;\n\t\t\t\t\t// _this.setState(\n\t\t\t\t\t// \t{\n\t\t\t\t\t// \t\tsuggestions: data,\n\t\t\t\t\t// \t\tsearchingCnt: searchingCnt,\n\t\t\t\t\t// \t}\n\t\t\t\t\t// );\n\t\t\t\t},\n\t\t\t\terror: function error(xhr, status, err) {\n\t\t\t\t\t// var searchingCnt = _this.state.searchingCnt;\n\t\t\t\t\t// searchingCnt = searchingCnt - 1;\n\t\t\t\t\t// _this.setState(\n\t\t\t\t\t// \t{\n\t\t\t\t\t// \t\tsearchingCnt: searchingCnt,\n\t\t\t\t\t// \t}\n\t\t\t\t\t// );\n\t\t\t\t\t// console.error(searchMemberUrl, status, err.toString());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/**\n   * 그룹 suggestion을 AJAX요청하여 상태를 업데이트한다.\n   * @memberof PermissionInclude\n   * @param {string} keyword\n   * */\n\n\t}, {\n\t\tkey: 'searchGroup',\n\t\tvalue: function searchGroup($input, keyword) {\n\t\t\tvar _this = this;\n\t\t\tvar searchGroupUrl = _this.groupSearchUrl;\n\t\t\t// var _this = this;\n\t\t\t// var searchingCnt = this.state.searchingCnt + 1;\n\t\t\t// _this.setState({\n\t\t\t// \tsearchingCnt: searchingCnt,\n\t\t\t// });\n\n\t\t\t$.ajax({\n\t\t\t\turl: searchGroupUrl + '/' + keyword,\n\t\t\t\tmethod: 'get',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t//TODO:: view renderin\n\t\t\t\t\tif (data.length > 0) {\n\t\t\t\t\t\tvar temp = '';\n\t\t\t\t\t\ttemp += '<ul data-target=\"group\">';\n\n\t\t\t\t\t\tdata.forEach(function (item, i) {\n\t\t\t\t\t\t\t/**\n        * TODO :: li event\n        * PermissionTagSuggestion handleClick click\n        * PermissionTagSuggestion handleHover mouseover\n        * */\n\t\t\t\t\t\t\t// temp += \t\t`<li class=\"${i == _this.selectedIndex ? 'active' : '' }\">`;\n\t\t\t\t\t\t\ttemp += '<li data-tag=\\'' + JSON.stringify(item) + '\\'>';\n\t\t\t\t\t\t\ttemp += '<span>' + _this.makeIt(item, keyword) + '</span>';\n\t\t\t\t\t\t\ttemp += '</li>';\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\ttemp += '</ul>';\n\n\t\t\t\t\t\t$input.parent().find('.ReactTags__suggestions').html(temp);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$input.parent().find('.ReactTags__suggestions').empty();\n\t\t\t\t\t}\n\n\t\t\t\t\t// var searchingCnt = _this.state.searchingCnt;\n\t\t\t\t\t// searchingCnt = searchingCnt - 1;\n\t\t\t\t\t// _this.setState(\n\t\t\t\t\t// \t{\n\t\t\t\t\t// \t\tsuggestions: data,\n\t\t\t\t\t// \t\tsearchingCnt: searchingCnt,\n\t\t\t\t\t// \t}\n\t\t\t\t\t// );\n\t\t\t\t},\n\t\t\t\terror: function error(xhr, status, err) {\n\t\t\t\t\t// var searchingCnt = _this.state.searchingCnt;\n\t\t\t\t\t// searchingCnt = searchingCnt - 1;\n\t\t\t\t\t// _this.setState(\n\t\t\t\t\t// \t{\n\t\t\t\t\t// \t\tsearchingCnt: searchingCnt,\n\t\t\t\t\t// \t}\n\t\t\t\t\t// );\n\t\t\t\t\t// console.error(searchGroupUrl, status, err.toString());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\n\t\t\tvar mode = this.permission.mode;\n\t\t\tvar rating = this.permission.rating;\n\t\t\tvar _this = this;\n\t\t\tvar modeEnable = false;\n\t\t\tvar permissionTypes = [{ value: 'super', name: XE.Lang.trans('xe::memberRatingAdministrator') }, { value: 'manager', name: XE.Lang.trans('xe::memberRatingManager') }, { value: 'member', name: XE.Lang.trans('xe::member') }, { value: 'guest', name: XE.Lang.trans('xe::guest') }];\n\n\t\t\tvar disabled = false;\n\n\t\t\tif (mode === 'manual' || mode === 'inherit') {\n\t\t\t\tmodeEnable = true;\n\t\t\t\tif (mode !== 'manual') {\n\t\t\t\t\tdisabled = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar includeGroups = this.permission.group.map(function (group) {\n\t\t\t\treturn group.id;\n\t\t\t});\n\n\t\t\tvar includeMembers = this.permission.user.map(function (member) {\n\t\t\t\treturn member.id;\n\t\t\t});\n\n\t\t\tvar excludeMembers = this.permission.except.map(function (member) {\n\t\t\t\treturn member.id;\n\t\t\t});\n\n\t\t\tvar temp = '';\n\t\t\ttemp += '<div>';\n\n\t\t\tif (modeEnable) {\n\t\t\t\tvar checked = mode === 'inherit' ? 'checked=\"checked\"' : '';\n\n\t\t\t\ttemp += '<div class=\"form-group\">';\n\t\t\t\ttemp += '<div class=\"checkbox\">';\n\t\t\t\ttemp += '<label><input type=\"checkbox\" name=\"' + (this.type + 'Mode') + '\" class=\"chkModeAble\" value=\"inherit\" ' + checked + ' /> ' + XE.Lang.trans('xe::inheritMode') + '</label>';\n\t\t\t\ttemp += '</div>';\n\t\t\t\ttemp += '</div>';\n\t\t\t}\n\n\t\t\ttemp += '<div class=\"form-group\">';\n\t\t\ttemp += '<label>\\uD68C\\uC6D0 \\uB4F1\\uAE09</label>';\n\t\t\ttemp += '<div class=\"radio\">';\n\t\t\tpermissionTypes.forEach(function (permissionType) {\n\t\t\t\tvar checked = permissionType.value == rating ? 'checked' : '';\n\n\t\t\t\ttemp += '<label><input type=\"radio\" ' + (disabled ? 'disabled=\"disabled\"' : '') + ' name=\"' + (_this.type + 'Rating') + '\" value=\"' + permissionType.value + '\" ' + (checked ? 'checked=\"checked\"' : '') + ' /> ' + permissionType.name + ' &nbsp;</label>';\n\t\t\t});\n\t\t\ttemp += '</div>';\n\t\t\ttemp += '</div>';\n\t\t\ttemp += '<div class=\"form-group\">';\n\t\t\ttemp += '<label>' + XE.Lang.trans('xe::includeUserOrGroup') + '</label>';\n\t\t\ttemp += '<div class=\"ReactTags__tags\">';\n\n\t\t\ttemp += '<div class=\"ReactTags__selected groupWrap\">';\n\t\t\tthis.permission.group.forEach(function (g) {\n\t\t\t\tvar tag = g;\n\t\t\t\tvar label = '%' + (tag.displayName || tag.name);\n\n\t\t\t\ttemp += '<span>' + label + '<a href=\"#\" class=\"btnDeleteGroup\">x</a></span>';\n\t\t\t});\n\t\t\ttemp += '</div>';\n\n\t\t\ttemp += '<div class=\"ReactTags__selected userWrap\">';\n\t\t\tthis.permission.user.forEach(function (m) {\n\t\t\t\tvar tag = m;\n\t\t\t\tvar label = '@' + (tag.displayName || tag.name);\n\n\t\t\t\ttemp += '<span>' + label + '<a href=\"#\" class=\"btnDeleteMember\">x</a></span>';\n\t\t\t});\n\t\t\ttemp += '</div>';\n\n\t\t\ttemp += '<div class=\"ReactTags__tagInput\">';\n\t\t\ttemp += '<input type=\"text\" placeholder=\"' + this.placeholder + '\" class=\"form-control inputMemberGroup\" data-input=\"include\" ' + (disabled ? 'disabled=\"disabled\"' : '') + ' value=\"' + this.query + '\" data-index=\"-1\" />'; //TODO:: PermissionInclude handleKeyDown\n\t\t\ttemp += '<div class=\"ReactTags__suggestions\" data-input=\"include\"></div>';\n\n\t\t\ttemp += '</div>'; //ReactTags__tagInput\n\t\t\ttemp += '<input type=\"hidden\" name=\"' + (this.type + 'Group') + '\" class=\"form-control includeGroups\" value=\"' + includeGroups + '\" />';\n\t\t\ttemp += '<input type=\"hidden\" name=\"' + (this.type + 'User') + '\" class=\"form-control includeMembers\" value=\"' + includeMembers + '\" />';\n\t\t\ttemp += '</div>'; //ReactTags__tags\n\t\t\ttemp += '</div>'; //form-group\n\n\t\t\tif (this.vgroupAll.length >= 1) {\n\t\t\t\ttemp += '<div class=\"form-group\">';\n\t\t\t\ttemp += '<label>' + XE.Lang.trans('xe::includeVGroup') + '</label>';\n\n\t\t\t\ttemp += _this.vgroupAll.map(function (data) {\n\n\t\t\t\t\tvar checked = false;\n\n\t\t\t\t\tvar inArray = function inArray(val, arr) {\n\t\t\t\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\t\t\t\tif (arr[i] == val) {\n\t\t\t\t\t\t\t\treturn i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t};\n\n\t\t\t\t\tif (inArray(data.id, this.permission.vgroup) != -1) {\n\t\t\t\t\t\tchecked = true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn '<label><input type=\"checkbox\" ' + (disabled ? 'disabled=\"disabled\"' : '') + ' name=\"' + (_this.type + 'VGroup[]') + '\" value=\"' + data.id + '\" ' + (checked ? 'checked=\"checked\"' : '') + ' /> ' + data.title + ' &nbsp;</label>';\n\t\t\t\t});\n\n\t\t\t\ttemp += '</div>';\n\t\t\t}\n\n\t\t\ttemp += '<div class=\"form-group\">';\n\t\t\ttemp += '<label>' + XE.Lang.trans('xe::excludeUser') + '</label>';\n\t\t\ttemp += '<div class=\"ReactTags__tags\">';\n\t\t\ttemp += '<div class=\"ReactTags__selected exceptWrap\">';\n\n\t\t\tthis.permission.except.forEach(function (tag, i) {\n\t\t\t\tvar label = tag.displayName || tag.name;\n\t\t\t\tlabel = '@' + label;\n\n\t\t\t\ttemp += '<span>' + label + '<a href=\"#\" class=\"btnDeleteExcept\">x</a></span>';\n\t\t\t});\n\n\t\t\ttemp += '</div>';\n\t\t\ttemp += '<div class=\"ReactTags__tagInput\">';\n\t\t\ttemp += '<input type=\"text\" placeholder=\"' + XE.Lang.trans('xe::explainExcludeUser') + '\" class=\"form-control inputMemberGroup\" data-input=\"exclude\" ' + (disabled ? 'disabled=\"disabled\"' : '') + ' data-index=\"-1\" />'; //TODO:: PermissionExclude handleKeyDown\n\t\t\ttemp += '<div class=\"ReactTags__suggestions\" data-input=\"exclude\"></div>';\n\t\t\ttemp += '</div>'; //ReactTags__tagInput\n\t\t\ttemp += '</div>'; //ReactTags__tags\n\t\t\ttemp += '<input type=\"hidden\" name=\"' + (this.type + 'Except') + '\" class=\"form-control excludeMembers\" value=\"' + excludeMembers + '\" />';\n\t\t\ttemp += '</div>'; //form-group\n\n\t\t\ttemp += '</div>';\n\n\t\t\tthis.$wrapper.html(temp);\n\t\t}\n\t}]);\n\n\treturn Permission;\n}();\n\n$('.__xe__uiobject_permission').each(function (i) {\n\tvar $this = $(this);\n\tvar permission = $this.data('data');\n\n\tvar key = $this.data('key');\n\tvar type = $this.data('type');\n\tvar memberSearchUrl = $this.data('memberUrl');\n\tvar groupSearchUrl = $this.data('groupUrl');\n\tvar vgroupAll = $this.data('vgroupAll');\n\n\tvar p = new Permission({ $wrapper: $this, key: key, memberSearchUrl: memberSearchUrl, groupSearchUrl: groupSearchUrl, permission: permission, type: type, vgroupAll: vgroupAll });\n\tp.render();\n\tp.bindEvents();\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/core/permission/permission.js\n// module id = 309\n// module chunks = 4\n\n//# sourceURL=webpack:///./resources/assets/core/permission/permission.js?");

/***/ })

},[308]);