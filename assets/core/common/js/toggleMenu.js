webpackJsonp([5],{306:function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(exports,"__esModule",{value:!0});var _react=__webpack_require__(31),_react2=_interopRequireDefault(_react),_createReactClass=__webpack_require__(307),_createReactClass2=_interopRequireDefault(_createReactClass),ToggleMenu=(0,_createReactClass2.default)({displayName:"ToggleMenu",getInitialState:function(){return{items:[],loaded:!1,firstLoaded:!1}},reload:function(){this.setState({loaded:!1})},getItems:function(){return this.state.items.length<1&&!1===this.state.firstLoaded?_react2.default.createElement("li",{className:"xe-dropdown-header",onClick:this.onClick},"Loading..."):this.state.items.length<1?_react2.default.createElement("li",{className:"xe-dropdown-header",onClick:this.onClick},"항목이 없습니다."):this.state.items.map(function(e,t){var a=$.extend({},e,{identifier:this.props.identifier,align:this.props.align,class:this.props.itemClass,data:this.props.data,reload:this.reload});return _react2.default.createElement(ToggleMenu.Item,_react2.default.__spread({},a,{key:t}))}.bind(this))},getIcon:function(){return this.props.icon?_react2.default.DOM.span({className:this.props.icon}):""},getBody:function(){var e="xe-dropdown-toggle";if(this.props.class){var t=[e];t.push(this.props.class),e=t.join(" ")}var a={className:e,"data-toggle":"xe-dropdown","aria-expanded":"false",onClick:this.onClick};return this.props.html?($.extend(a,{dangerouslySetInnerHTML:{__html:this.props.html}}),_react2.default.DOM.span(a)):_react2.default.DOM.i(a,this.getIcon()," ",this.props.text)},onClick:function(e){e.preventDefault(),!0!==this.state.loaded&&(this.setState({loaded:!0}),$.ajax({url:xeBaseURL+"/plugin/toggleMenu",type:"get",dataType:"json",data:{type:this.props.type,id:this.props.identifier},success:function(e){this.setState({items:e,firstLoaded:!0})}.bind(this)}))},isActive:function(e){return"xe-dropdown "+(!0===this.state.loaded?"open":"")},render:function(){return _react2.default.DOM.span({className:this.isActive(),ref:"dropdown"},this.getBody(),_react2.default.DOM.ul({className:"xe-dropdown-menu"+("right"===this.props.align?" xe-dropdown-menu-right":""),role:"menu"},this.getItems()))}});ToggleMenu.Item=(0,_createReactClass2.default)({displayName:"Item",componentWillMount:function(){this.props.script&&!0!==$('script[src="'+this.props.script+'"]').is("script")&&$.getScript(this.props.script)},itemClick:function(e){this.props.reload()},render:function render(){if("raw"==this.props.type)return _react2.default.DOM.li({onClick:this.itemClick,dangerouslySetInnerHTML:{__html:this.props.action}},null);var attr;switch(this.props.type){case"func":attr={href:"#",onClick:function(e){eval(this.props.action)(this.props.data),e.preventDefault()}.bind(this)};break;case"exec":attr={href:"#",onClick:function(e){eval(this.props.action),e.preventDefault()}.bind(this)};break;case"link":attr={href:this.props.action}}return _react2.default.DOM.li({className:this.props.class,onClick:this.itemClick},_react2.default.DOM.a(attr,this.props.text))}}),exports.default=ToggleMenu},307:function(e,t,a){"use strict";var s=a(31),i=a(55);if(void 0===s)throw Error("create-react-class could not find the React object. If you are using script tags, make sure that React is being loaded before create-react-class.");var r=(new s.Component).updater;e.exports=i(s.Component,s.isValidElement,r)}},[306]);