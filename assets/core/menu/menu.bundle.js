webpackJsonp([2],{

/***/ 10:
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(51)(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(50)();\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/index.js\n// module id = 10\n// module chunks = 1 2\n\n//# sourceURL=webpack:///./~/prop-types/index.js?");

/***/ }),

/***/ 225:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _react = __webpack_require__(5);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(15);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _MenuTree = __webpack_require__(76);\n\nvar _MenuTree2 = _interopRequireDefault(_MenuTree);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n$(function () {\n  var $container = $('#menuContainer');\n\n  _reactDom2.default.render(_react2.default.createElement(_MenuTree2.default, {\n    baseUrl: $container.data('url'),\n    home: $container.data('home'),\n    menus: $container.data('menus'),\n    menuRoutes: {\n      createMenu: $container.data('createmenu')\n    }\n  }, null), $container[0]);\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/core/menu/MenuRenderer.js\n// module id = 225\n// module chunks = 2\n\n//# sourceURL=webpack:///./resources/assets/core/menu/MenuRenderer.js?");

/***/ }),

/***/ 28:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n\n\nvar _assign = __webpack_require__(29);\n\nvar emptyObject = __webpack_require__(19);\nvar _invariant = __webpack_require__(2);\n\nif (process.env.NODE_ENV !== 'production') {\n  var warning = __webpack_require__(3);\n}\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\nvar ReactPropTypeLocationNames;\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context',\n  };\n} else {\n  ReactPropTypeLocationNames = {};\n}\n\nfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n  /**\n   * Policies that describe methods in `ReactClassInterface`.\n   */\n\n\n  var injectedMixins = [];\n\n  /**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */\n  var ReactClassInterface = {\n\n    /**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */\n    mixins: 'DEFINE_MANY',\n\n    /**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */\n    statics: 'DEFINE_MANY',\n\n    /**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    propTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    contextTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */\n    childContextTypes: 'DEFINE_MANY',\n\n    // ==== Definition methods ====\n\n    /**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */\n    getDefaultProps: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */\n    getInitialState: 'DEFINE_MANY_MERGED',\n\n    /**\n     * @return {object}\n     * @optional\n     */\n    getChildContext: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @nosideeffects\n     * @required\n     */\n    render: 'DEFINE_ONCE',\n\n    // ==== Delegate methods ====\n\n    /**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */\n    componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */\n    componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */\n    shouldComponentUpdate: 'DEFINE_ONCE',\n\n    /**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */\n    componentWillUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */\n    componentWillUnmount: 'DEFINE_MANY',\n\n    // ==== Advanced methods ====\n\n    /**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */\n    updateComponent: 'OVERRIDE_BASE'\n\n  };\n\n  /**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */\n  var RESERVED_SPEC_KEYS = {\n    displayName: function (Constructor, displayName) {\n      Constructor.displayName = displayName;\n    },\n    mixins: function (Constructor, mixins) {\n      if (mixins) {\n        for (var i = 0; i < mixins.length; i++) {\n          mixSpecIntoComponent(Constructor, mixins[i]);\n        }\n      }\n    },\n    childContextTypes: function (Constructor, childContextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, childContextTypes, 'childContext');\n      }\n      Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n    },\n    contextTypes: function (Constructor, contextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, contextTypes, 'context');\n      }\n      Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n    },\n    /**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */\n    getDefaultProps: function (Constructor, getDefaultProps) {\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n      } else {\n        Constructor.getDefaultProps = getDefaultProps;\n      }\n    },\n    propTypes: function (Constructor, propTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, propTypes, 'prop');\n      }\n      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n    },\n    statics: function (Constructor, statics) {\n      mixStaticSpecIntoComponent(Constructor, statics);\n    },\n    autobind: function () {} };\n\n  function validateTypeDef(Constructor, typeDef, location) {\n    for (var propName in typeDef) {\n      if (typeDef.hasOwnProperty(propName)) {\n        // use a warning instead of an _invariant so components\n        // don't show up in prod but only in __DEV__\n        process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n      }\n    }\n  }\n\n  function validateMethodOverride(isAlreadyDefined, name) {\n    var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n    // Disallow overriding of base class methods unless explicitly allowed.\n    if (ReactClassMixin.hasOwnProperty(name)) {\n      _invariant(specPolicy === 'OVERRIDE_BASE', 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name);\n    }\n\n    // Disallow defining methods more than once unless explicitly allowed.\n    if (isAlreadyDefined) {\n      _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name);\n    }\n  }\n\n  /**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */\n  function mixSpecIntoComponent(Constructor, spec) {\n    if (!spec) {\n      if (process.env.NODE_ENV !== 'production') {\n        var typeofSpec = typeof spec;\n        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n        process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n      }\n\n      return;\n    }\n\n    _invariant(typeof spec !== 'function', 'ReactClass: You\\'re attempting to ' + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.');\n    _invariant(!isValidElement(spec), 'ReactClass: You\\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.');\n\n    var proto = Constructor.prototype;\n    var autoBindPairs = proto.__reactAutoBindPairs;\n\n    // By handling mixins before any other properties, we ensure the same\n    // chaining order is applied to methods with DEFINE_MANY policy, whether\n    // mixins are listed before or after these methods in the spec.\n    if (spec.hasOwnProperty(MIXINS_KEY)) {\n      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n    }\n\n    for (var name in spec) {\n      if (!spec.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (name === MIXINS_KEY) {\n        // We have already handled mixins in a special case above.\n        continue;\n      }\n\n      var property = spec[name];\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      validateMethodOverride(isAlreadyDefined, name);\n\n      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n        RESERVED_SPEC_KEYS[name](Constructor, property);\n      } else {\n        // Setup methods on prototype:\n        // The following member methods should not be automatically bound:\n        // 1. Expected ReactClass methods (in the \"interface\").\n        // 2. Overridden methods (that were mixed in).\n        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n        var isFunction = typeof property === 'function';\n        var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n        if (shouldAutoBind) {\n          autoBindPairs.push(name, property);\n          proto[name] = property;\n        } else {\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassInterface[name];\n\n            // These cases should already be caught by validateMethodOverride.\n            _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name);\n\n            // For methods which are defined more than once, call the existing\n            // methods before calling the new property, merging if appropriate.\n            if (specPolicy === 'DEFINE_MANY_MERGED') {\n              proto[name] = createMergedResultFunction(proto[name], property);\n            } else if (specPolicy === 'DEFINE_MANY') {\n              proto[name] = createChainedFunction(proto[name], property);\n            }\n          } else {\n            proto[name] = property;\n            if (process.env.NODE_ENV !== 'production') {\n              // Add verbose displayName to the function, which helps when looking\n              // at profiling tools.\n              if (typeof property === 'function' && spec.displayName) {\n                proto[name].displayName = spec.displayName + '_' + name;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function mixStaticSpecIntoComponent(Constructor, statics) {\n    if (!statics) {\n      return;\n    }\n    for (var name in statics) {\n      var property = statics[name];\n      if (!statics.hasOwnProperty(name)) {\n        continue;\n      }\n\n      var isReserved = name in RESERVED_SPEC_KEYS;\n      _invariant(!isReserved, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name);\n\n      var isInherited = name in Constructor;\n      _invariant(!isInherited, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name);\n      Constructor[name] = property;\n    }\n  }\n\n  /**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */\n  function mergeIntoWithNoDuplicateKeys(one, two) {\n    _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');\n\n    for (var key in two) {\n      if (two.hasOwnProperty(key)) {\n        _invariant(one[key] === undefined, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key);\n        one[key] = two[key];\n      }\n    }\n    return one;\n  }\n\n  /**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createMergedResultFunction(one, two) {\n    return function mergedResult() {\n      var a = one.apply(this, arguments);\n      var b = two.apply(this, arguments);\n      if (a == null) {\n        return b;\n      } else if (b == null) {\n        return a;\n      }\n      var c = {};\n      mergeIntoWithNoDuplicateKeys(c, a);\n      mergeIntoWithNoDuplicateKeys(c, b);\n      return c;\n    };\n  }\n\n  /**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createChainedFunction(one, two) {\n    return function chainedFunction() {\n      one.apply(this, arguments);\n      two.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */\n  function bindAutoBindMethod(component, method) {\n    var boundMethod = method.bind(component);\n    if (process.env.NODE_ENV !== 'production') {\n      boundMethod.__reactBoundContext = component;\n      boundMethod.__reactBoundMethod = method;\n      boundMethod.__reactBoundArguments = null;\n      var componentName = component.constructor.displayName;\n      var _bind = boundMethod.bind;\n      boundMethod.bind = function (newThis) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        // User is trying to bind() an autobound method; we effectively will\n        // ignore the value of \"this\" that the user is trying to use, so\n        // let's warn.\n        if (newThis !== component && newThis !== null) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n        } else if (!args.length) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n          return boundMethod;\n        }\n        var reboundMethod = _bind.apply(boundMethod, arguments);\n        reboundMethod.__reactBoundContext = component;\n        reboundMethod.__reactBoundMethod = method;\n        reboundMethod.__reactBoundArguments = args;\n        return reboundMethod;\n      };\n    }\n    return boundMethod;\n  }\n\n  /**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */\n  function bindAutoBindMethods(component) {\n    var pairs = component.__reactAutoBindPairs;\n    for (var i = 0; i < pairs.length; i += 2) {\n      var autoBindKey = pairs[i];\n      var method = pairs[i + 1];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n\n  var IsMountedMixin = {\n    componentDidMount: function () {\n      this.__isMounted = true;\n    },\n    componentWillUnmount: function () {\n      this.__isMounted = false;\n    }\n  };\n\n  /**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */\n  var ReactClassMixin = {\n\n    /**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */\n    replaceState: function (newState, callback) {\n      this.updater.enqueueReplaceState(this, newState, callback);\n    },\n\n    /**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */\n    isMounted: function () {\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this.__didWarnIsMounted, '%s: isMounted is deprecated. Instead, make sure to clean up ' + 'subscriptions and pending requests in componentWillUnmount to ' + 'prevent memory leaks.', this.constructor && this.constructor.displayName || this.name || 'Component') : void 0;\n        this.__didWarnIsMounted = true;\n      }\n      return !!this.__isMounted;\n    }\n  };\n\n  var ReactClassComponent = function () {};\n  _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  function createClass(spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function (props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (initialState === undefined && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, IsMountedMixin);\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  }\n\n  return createClass;\n}\n\nmodule.exports = factory;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/create-react-class/factory.js\n// module id = 28\n// module chunks = 1 2 4\n\n//# sourceURL=webpack:///./~/create-react-class/factory.js?");

/***/ }),

/***/ 29:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/create-react-class/~/object-assign/index.js\n// module id = 29\n// module chunks = 1 2 4\n\n//# sourceURL=webpack:///./~/create-react-class/~/object-assign/index.js?");

/***/ }),

/***/ 356:
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(225);\n__webpack_require__(72);\n__webpack_require__(73);\n__webpack_require__(77);\n__webpack_require__(78);\n__webpack_require__(74);\n__webpack_require__(75);\nmodule.exports = __webpack_require__(76);\n\n\n//////////////////\n// WEBPACK FOOTER\n// multi ./resources/assets/core/menu/MenuRenderer.js ./resources/assets/core/menu/MenuEntity.js ./resources/assets/core/menu/MenuItem.js ./resources/assets/core/menu/TreeNode.js ./resources/assets/core/menu/UITree.js ./resources/assets/core/menu/MenuSearchBar.js ./resources/assets/core/menu/MenuSearchSuggestion.js ./resources/assets/core/menu/MenuTree.js\n// module id = 356\n// module chunks = 2\n\n//# sourceURL=webpack:///multi_./resources/assets/core/menu/MenuRenderer.js_./resources/assets/core/menu/MenuEntity.js_./resources/assets/core/menu/MenuItem.js_./resources/assets/core/menu/TreeNode.js_./resources/assets/core/menu/UITree.js_./resources/assets/core/menu/MenuSearchBar.js_./resources/assets/core/menu/MenuSearchSuggestion.js_./resources/assets/core/menu/MenuTree.js?");

/***/ }),

/***/ 50:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n\n\nvar emptyFunction = __webpack_require__(12);\nvar invariant = __webpack_require__(2);\nvar ReactPropTypesSecret = __webpack_require__(34);\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithThrowingShims.js\n// module id = 50\n// module chunks = 1 2\n\n//# sourceURL=webpack:///./~/prop-types/factoryWithThrowingShims.js?");

/***/ }),

/***/ 72:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(5);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createReactClass = __webpack_require__(8);\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _propTypes = __webpack_require__(10);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = (0, _createReactClass2.default)({\n  displayName: 'MenuEntity',\n\n  propTypes: {\n    index: _propTypes2.default.object,\n    onCollapse: _propTypes2.default.func,\n    getBaseUrl: _propTypes2.default.func\n  },\n\n  handleCollapse: function handleCollapse(e) {\n    e.stopPropagation();\n    var nodeId = this.props.index.id;\n    if (this.props.onCollapse) this.props.onCollapse(nodeId);\n  },\n\n  render: function render() {\n    var index = this.props.index;\n    var node = index.node;\n    var nodeUrl = this.props.getBaseUrl() + '/menus/' + node.id;\n    var addItemUrl = this.props.getBaseUrl() + '/menus/' + node.id + '/types';\n\n    // trans\n    var trans = {\n      addItem: XE.Lang.trans('xe::addItem')\n    };\n\n    var nodeId = 'xe_tree_node_' + node.id;\n    return _react2.default.createElement(\n      'div',\n      { className: 'panel-heading', id: nodeId },\n      _react2.default.createElement(\n        'div',\n        { className: 'pull-left' },\n        _react2.default.createElement(\n          'a',\n          { href: nodeUrl },\n          _react2.default.createElement(\n            'h3',\n            null,\n            _react2.default.createElement('i', { className: 'xi-folder' }),\n            node.title\n          )\n        )\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'pull-right' },\n        _react2.default.createElement(\n          'a',\n          { href: addItemUrl, className: 'btn btn-primary' },\n          _react2.default.createElement('i', {\n            className: 'xi-plus' }),\n          _react2.default.createElement(\n            'span',\n            null,\n            trans.addItem\n          )\n        )\n      )\n    );\n  }\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/core/menu/MenuEntity.js\n// module id = 72\n// module chunks = 2\n\n//# sourceURL=webpack:///./resources/assets/core/menu/MenuEntity.js?");

/***/ }),

/***/ 73:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(5);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createReactClass = __webpack_require__(8);\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _reactDom = __webpack_require__(15);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = __webpack_require__(10);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = (0, _createReactClass2.default)({\n  displayName: 'MenuItem',\n\n  propTypes: {\n    index: _propTypes2.default.object,\n    home: _propTypes2.default.string,\n    getBaseUrl: _propTypes2.default.func,\n    clickHome: _propTypes2.default.func,\n    mouseDown: _propTypes2.default.func,\n\n    getSelectedNode: _propTypes2.default.func,\n    setSelectedNode: _propTypes2.default.func\n  },\n\n  onClickLink: function onClickLink(node) {\n    if (node.type !== 'xpressengine@directLink') {\n      location.href = '/' + node.url;\n    } else {\n      location.href = node.url;\n    }\n  },\n\n  componentDidUpdate: function componentDidUpdate() {\n    var searched = this.props.getSearchedNode();\n    var node = this.props.index.node;\n    if (searched === node) {\n      $('html, body').animate({\n        scrollTop: $('#xe_tree_node_' + node.id).offset().top - 20\n      }, 500);\n      this.props.setSearchedNode(null);\n    }\n  },\n\n  onClickHome: function onClickHome(node) {\n    this.props.clickHome(node);\n  },\n\n  handleMouseDown: function handleMouseDown(e) {\n    var nodeId = this.props.index.id;\n    var dom = _reactDom2.default.findDOMNode(this.refs.inner);\n    this.props.mouseDown(nodeId, dom, e);\n  },\n\n  onClickSetNode: function onClickSetNode(node) {\n\n    var selected = this.props.getSelectedNode();\n\n    if (selected === node) {\n      this.props.setSelectedNode(null);\n    } else {\n      this.props.setSelectedNode(node);\n    }\n  },\n\n  render: function render() {\n    var node = this.props.index.node;\n\n    var title = node.title || '';\n    var type = node.type;\n    var url = '';\n\n    var trans = {\n      title: XE.Lang.trans(title),\n      setHome: XE.Lang.trans('xe::setHome'),\n      goLink: XE.Lang.trans('xe::goLink')\n    };\n\n    if (node.type !== 'xpressengine@directLink') {\n      if (node.id == this.props.home) {\n        url = '/';\n      } else {\n        url = '/' + node.url;\n      }\n\n      url = Utils.getUri(xeBaseURL + url);\n    } else {\n      url = node.url;\n    }\n\n    var nodeUrl = this.props.getBaseUrl() + '/menus/' + node.menuId + '/items/' + node.id;\n    var homeElement;\n    if (node.id == this.props.home) {\n      homeElement = _react2.default.createElement(\n        'button',\n        { type: 'button', className: 'btn-link hidden-xs home-on' },\n        _react2.default.createElement('i', { className: 'xi-home' })\n      );\n    } else {\n      if (node.activated === 1) {\n        homeElement = _react2.default.createElement(\n          'button',\n          { type: 'button', className: 'btn btn-link hidden-xs',\n            onClick: this.onClickHome.bind(null, node) },\n          _react2.default.createElement('i', { className: 'xi-home' })\n        );\n      } else {\n        homeElement = null;\n      }\n    }\n\n    var controlElement;\n    var selected = this.props.getSelectedNode();\n    if (selected == node) {\n      controlElement = _react2.default.createElement(\n        'div',\n        { className: 'visible-xs more-area', style: { display: 'block' } },\n        _react2.default.createElement(\n          'button',\n          { className: 'btn', type: 'button',\n            onClick: this.onClickHome.bind(null, node) },\n          trans.setHome\n        ),\n        _react2.default.createElement(\n          'a',\n          { href: url, className: 'btn' },\n          trans.goLink\n        )\n      );\n    }\n\n    var nodeId = 'xe_tree_node_' + node.id;\n    return _react2.default.createElement(\n      'div',\n      { className: 'item-content', ref: 'inner', id: nodeId },\n      _react2.default.createElement(\n        'button',\n        { className: 'btn handler', onMouseDown: this.handleMouseDown },\n        _react2.default.createElement('i', { className: 'xi-drag-vertical' })\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'item-info' },\n        _react2.default.createElement('i', { className: 'xi-paper' }),\n        _react2.default.createElement(\n          'dl',\n          null,\n          _react2.default.createElement(\n            'dt',\n            { className: 'sr-only' },\n            trans.title\n          ),\n          _react2.default.createElement(\n            'dd',\n            { className: 'ellipsis' },\n            _react2.default.createElement(\n              'a',\n              { href: nodeUrl },\n              trans.title\n            )\n          ),\n          _react2.default.createElement(\n            'dt',\n            { className: 'sr-only' },\n            url\n          ),\n          _react2.default.createElement(\n            'dd',\n            { className: 'text-blue ellipsis' },\n            _react2.default.createElement(\n              'a',\n              { href: url },\n              url\n            ),\n            _react2.default.createElement(\n              'em',\n              null,\n              '[',\n              type,\n              ']'\n            )\n          )\n        )\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'btn-group pull-right' },\n        _react2.default.createElement(\n          'button',\n          { type: 'button', className: 'btn-more visible-xs',\n            onClick: this.onClickSetNode.bind(null, node) },\n          _react2.default.createElement('i', { className: 'xi-ellipsis-v' })\n        ),\n        homeElement\n      ),\n      controlElement\n    );\n  }\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/core/menu/MenuItem.js\n// module id = 73\n// module chunks = 2\n\n//# sourceURL=webpack:///./resources/assets/core/menu/MenuItem.js?");

/***/ }),

/***/ 74:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(5);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(15);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _createReactClass = __webpack_require__(8);\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _propTypes = __webpack_require__(10);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _MenuSearchSuggestion = __webpack_require__(75);\n\nvar _MenuSearchSuggestion2 = _interopRequireDefault(_MenuSearchSuggestion);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = (0, _createReactClass2.default)({\n  displayName: 'MenuSearchBar',\n\n  propTypes: {\n    tree: _propTypes2.default.object,\n    placeholder: _propTypes2.default.string,\n    handleSearch: _propTypes2.default.func,\n    menuRoutes: _propTypes2.default.object\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      placeholder: 'Search...',\n      tree: new Tree({})\n    };\n  },\n\n  componentDidMount: function componentDidMount() {},\n\n  getInitialState: function getInitialState() {\n    return {\n      query: '',\n      suggestions: [],\n      selectedIndex: -1,\n      selectionMode: false,\n      searchingCnt: 0\n    };\n  },\n\n  handleChange: function handleChange(e) {\n    var query = e.target.value.trim();\n    this.setState({\n      query: query\n    });\n\n    this.searchMenu(query);\n    if (query.length == 0) {\n      this.setState({\n        suggestions: [],\n        searchingCnt: 0\n      });\n    }\n  },\n\n  searchMenu: function searchMenu(keyword) {\n    var _this = this;\n    var searchingCnt = this.state.searchingCnt + 1;\n    var suggestions;\n    var tree = this.props.tree;\n\n    this.setState({\n      searchingCnt: searchingCnt\n    });\n\n    suggestions = _.filter(tree.indexes, function (index) {\n\n      if (index.id == 0) return false;\n\n      var title = index.node.title;\n      if (!_this.isMenuEntity(index.node)) {\n        title = XE.Lang.trans(index.node.title);\n      }\n\n      return !!(title && title.indexOf(keyword) !== -1);\n    });\n\n    searchingCnt = this.state.searchingCnt;\n    searchingCnt = searchingCnt - 1;\n    _this.setState({\n      suggestions: suggestions,\n      searchingCnt: searchingCnt\n    });\n  },\n\n  isMenuEntity: function isMenuEntity(node) {\n    return node.entity && node.entity == 'menu';\n  },\n\n  resetSearch: function resetSearch() {\n    var input = _reactDom2.default.findDOMNode(this.refs.input);\n\n    this.setState({\n      query: '',\n      selectedIndex: -1,\n      selectionMode: false,\n      suggestions: []\n    });\n\n    input.value = '';\n    input.focus();\n  },\n\n  handleKeyDown: function handleKeyDown(e) {\n    var _state = this.state;\n    var query = _state.query;\n    var selectedIndex = _state.selectedIndex;\n    var suggestions = _state.suggestions;\n\n    // hide suggestions menu on escape\n    if (e.keyCode === Keys.ESCAPE) {\n      e.preventDefault();\n      this.resetSearch();\n    }\n\n    if ((e.keyCode === Keys.ENTER || e.keyCode === Keys.TAB) && query != '') {\n      e.preventDefault();\n      if (this.state.selectionMode) {\n        this.selection(this.state.suggestions[this.state.selectedIndex]);\n      }\n    }\n\n    // up arrow\n    if (e.keyCode === Keys.UP_ARROW) {\n      e.preventDefault();\n\n      // last item, cycle to the top\n      if (selectedIndex <= 0) {\n        this.setState({\n          selectedIndex: this.state.suggestions.length - 1,\n          selectionMode: true\n        });\n      } else {\n        this.setState({\n          selectedIndex: selectedIndex - 1,\n          selectionMode: true\n        });\n      }\n    }\n\n    // down arrow\n    if (e.keyCode === Keys.DOWN_ARROW) {\n      e.preventDefault();\n      this.setState({\n        selectedIndex: (this.state.selectedIndex + 1) % suggestions.length,\n        selectionMode: true\n      });\n    }\n  },\n\n  selection: function selection(index) {\n    var input = _reactDom2.default.findDOMNode(this.refs.input);\n\n    this.props.handleSearch(index.node);\n\n    this.setState({\n      query: '',\n      selectionMode: false,\n      selectedIndex: -1\n    });\n\n    input.value = '';\n    input.focus();\n  },\n\n  handleSuggestionClick: function handleSuggestionClick(i, e) {\n    e.preventDefault();\n    this.selection(this.state.suggestions[i]);\n  },\n\n  handleSuggestionHover: function handleSuggestionHover(i, e) {\n    this.setState({\n      selectedIndex: i,\n      selectionMode: true\n    });\n  },\n\n  render: function render() {\n\n    var query = this.state.query.trim();\n    var selectedIndex = this.state.selectedIndex;\n    var suggestions = this.state.suggestions;\n    var placeholder = this.props.placeholder;\n    var trans = {\n      addMenu: XE.Lang.trans('xe::addMenu')\n    };\n\n    return _react2.default.createElement(\n      'div',\n      { className: 'panel-heading' },\n      _react2.default.createElement(\n        'div',\n        { className: 'pull-left' },\n        _react2.default.createElement(\n          'div',\n          { className: cx({\n              'input-group': true,\n              'search-group': true,\n              open: query.length > 0\n            }) },\n          _react2.default.createElement('input', { type: 'text', className: 'form-control',\n            'aria-label': 'Text input with dropdown button',\n            placeholder: placeholder, ref: 'input', onChange: this.handleChange,\n            onKeyDown: this.handleKeyDown }),\n          _react2.default.createElement(\n            'button',\n            { className: 'btn-link', onClick: this.resetSearch },\n            _react2.default.createElement('i', { className: 'xi-search' }),\n            _react2.default.createElement(\n              'span',\n              { className: 'sr-only' },\n              '\\uAC80\\uC0C9'\n            )\n          ),\n          _react2.default.createElement(_MenuSearchSuggestion2.default, { query: query,\n            suggestions: suggestions,\n            selectedIndex: selectedIndex,\n            handleClick: this.handleSuggestionClick,\n            handleHover: this.handleSuggestionHover })\n        )\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'pull-right' },\n        _react2.default.createElement(\n          'a',\n          { href: this.props.menuRoutes.createMenu, className: 'btn btn-primary pull-right' },\n          _react2.default.createElement('i', {\n            className: 'xi-plus' }),\n          ' ',\n          trans.addMenu\n        )\n      )\n    );\n  }\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/core/menu/MenuSearchBar.js\n// module id = 74\n// module chunks = 2\n\n//# sourceURL=webpack:///./resources/assets/core/menu/MenuSearchBar.js?");

/***/ }),

/***/ 75:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(5);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createReactClass = __webpack_require__(8);\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _propTypes = __webpack_require__(10);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MIN_QUERY_LENGTH = 2;\n\nexports.default = (0, _createReactClass2.default)({\n  displayName: 'MenuSearchSuggestion',\n\n  propTypes: {\n    query: _propTypes2.default.string.isRequired,\n    handleClick: _propTypes2.default.func.isRequired,\n    handleHover: _propTypes2.default.func.isRequired,\n    searchingCnt: _propTypes2.default.number,\n    suggestions: _propTypes2.default.array,\n    selectedIndex: _propTypes2.default.number\n  },\n  markIt: function markIt(item, query) {\n\n    var escapedRegex = query.trim().replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    var r = RegExp(escapedRegex, 'gi');\n    var itemName = item.node.title;\n    if (!this.isMenuEntity(item.node)) {\n      itemName = XE.Lang.trans(item.node.title);\n    }\n\n    return {\n      __html: itemName.replace(r, '<em>$&</em>')\n    };\n  },\n\n  isMenuEntity: function isMenuEntity(node) {\n    return node.entity && node.entity == 'menu';\n  },\n\n  render: function render() {\n\n    var props = this.props;\n    var suggestions = this.props.suggestions.map(function (item, i) {\n      return _react2.default.createElement(\n        'li',\n        {\n          key: i,\n          onClick: props.handleClick.bind(null, i),\n          onMouseOver: props.handleHover.bind(null, i),\n          className: cx({\n            on: i == props.selectedIndex\n          })\n        },\n        _react2.default.createElement('a', { href: '#',\n          dangerouslySetInnerHTML: this.markIt(item, props.query)\n        })\n      );\n    }.bind(this));\n\n    if (suggestions && suggestions.length === 0 || props.query.length < MIN_QUERY_LENGTH) {\n      return _react2.default.createElement('div', { className: 'search-list' });\n    }\n\n    return _react2.default.createElement(\n      'div',\n      { className: 'search-list' },\n      _react2.default.createElement(\n        'ul',\n        null,\n        suggestions\n      )\n    );\n  }\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/core/menu/MenuSearchSuggestion.js\n// module id = 75\n// module chunks = 2\n\n//# sourceURL=webpack:///./resources/assets/core/menu/MenuSearchSuggestion.js?");

/***/ }),

/***/ 76:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(5);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createReactClass = __webpack_require__(8);\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _MenuSearchBar = __webpack_require__(74);\n\nvar _MenuSearchBar2 = _interopRequireDefault(_MenuSearchBar);\n\nvar _UITree = __webpack_require__(78);\n\nvar _UITree2 = _interopRequireDefault(_UITree);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = (0, _createReactClass2.default)({\n  getInitialState: function getInitialState() {\n    return {\n      rawTree: this.props.menus,\n      dataTree: new Tree({ title: 'root', items: this.props.menus }),\n      selected: null,\n      searched: null,\n      home: this.props.home,\n      menuRoutes: this.props.menuRoutes\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.state.dataTree.movementFilter = this.movementFilter;\n  },\n\n  getSearchedNode: function getSearchedNode() {\n    return this.state.searched;\n  },\n\n  setSearchedNode: function setSearchedNode(node) {\n    this.setState({\n      searched: node\n    });\n  },\n\n  getSelectedNode: function getSelectedNode() {\n    return this.state.selected;\n  },\n\n  setSelectedNode: function setSelectedNode(node) {\n    this.setState({\n      selected: node\n    });\n  },\n\n  movementFilter: function movementFilter(param) {\n    var tree = param.tree;\n\n    var destNode = tree.get(param.toId);\n    var destIndex = tree.getIndex(param.toId);\n    var srcNode = tree.get(param.fromId);\n\n    if (this.isMenuEntity(srcNode)) return;\n\n    if (this.isMenuEntity(destNode)) {\n      if (param.placement == 'after') {\n        param.placement = 'prepend';\n        return param;\n      } else if (param.placement == 'before') {\n        if (destIndex.prev && destIndex.prev != null) {\n          var newDestIndex = tree.getIndex(destIndex.prev);\n          param.toId = destIndex.prev;\n          if (!newDestIndex.collapsed) {\n            param.placement = 'append';\n          }\n\n          return param;\n        } else {\n          return;\n        }\n      }\n\n      return param;\n    } else {\n\n      if (param.placement == 'append' || param.placement == 'prepend') {\n        if (destIndex.depth > MaxDepth) {\n          return;\n        }\n      }\n\n      return param;\n    }\n  },\n\n  moveMenuItem: function moveMenuItem(target) {\n    var moveItemUrl = this.props.baseUrl + '/moveItem';\n    var $context = $('#uitree');\n\n    XE.ajax({\n      url: moveItemUrl,\n      context: $context,\n      type: 'put',\n      dataType: 'json',\n      data: {\n        itemId: target.id,\n        parent: target.parent,\n        ordering: target.position\n      },\n      success: function (data) {\n        var tree = this.state.dataTree;\n        var node = tree.get(target.id);\n        var parentNode = tree.get(target.parent);\n\n        node.menuId = parentNode.entity == 'menu' ? target.parent : parentNode.menuId;\n\n        this.setState(function (state) {\n          state.dataTree[target.id] = node;\n        });\n\n        if (target.children && target.children.length > 0) {\n          this.setChildMenuId(target);\n        }\n\n        XE.toast('success', 'Item moved');\n      }.bind(this)\n    });\n  },\n\n  setChildMenuId: function setChildMenuId(target) {\n    var tree = this.state.dataTree;\n\n    if (target.children && target.children.length > 0) {\n      for (var i = 0, max = target.children.length; i < max; i += 1) {\n        if (tree.indexes[target.id].node.menuId !== tree.indexes[target.children[i]].node.menuId) {\n          var childNode = tree.get(target.children[i]);\n\n          childNode.menuId = tree.indexes[target.id].node.menuId;\n\n          this.setState(function (state, props) {\n            state.dataTree[target.children[i]] = childNode;\n          });\n\n          this.setChildMenuId(tree.indexes[target.children[i]]);\n        }\n      }\n    }\n  },\n\n  getBaseUrl: function getBaseUrl() {\n    return this.props.baseUrl;\n  },\n\n  onClickHome: function onClickHome(node) {\n    var homeItemUrl = this.props.baseUrl + '/setHome';\n    var oldHome = this.state.home;\n    var $context = $('#uitree');\n\n    this.setState({ home: node.id });\n    XE.ajax({\n      url: homeItemUrl,\n      context: $context,\n      type: 'put',\n      dataType: 'json',\n      data: {\n        itemId: node.id\n      },\n      success: function (data) {\n        XE.toast('success', node.title + ' is home!');\n      }.bind(this),\n      error: function (data) {\n        XE.toast('error', 'home setting was failed!');\n        this.setState({ home: oldHome });\n      }.bind(this)\n    });\n  },\n\n  render: function render() {\n    return _react2.default.createElement(\n      'div',\n      { className: 'col-sm-12' },\n      _react2.default.createElement(\n        'div',\n        { className: 'panel' },\n        _react2.default.createElement(_MenuSearchBar2.default, { tree: this.state.dataTree, handleSearch: this.setSearchedNode,\n          menuRoutes: this.state.menuRoutes }),\n        _react2.default.createElement(\n          'div',\n          { className: 'panel-body' },\n          _react2.default.createElement(_UITree2.default, { paddingLeft: 25,\n            tree: this.state.dataTree,\n            home: this.state.home,\n            getBaseUrl: this.getBaseUrl,\n            clickHome: this.onClickHome,\n            getSearchedNode: this.getSearchedNode,\n            setSearchedNode: this.setSearchedNode,\n            getSelectedNode: this.getSelectedNode,\n            setSelectedNode: this.setSelectedNode,\n            moveNode: this.moveMenuItem })\n        )\n      )\n    );\n  },\n\n  isMenuEntity: function isMenuEntity(node) {\n    return node.entity && node.entity == 'menu';\n  }\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/core/menu/MenuTree.js\n// module id = 76\n// module chunks = 2\n\n//# sourceURL=webpack:///./resources/assets/core/menu/MenuTree.js?");

/***/ }),

/***/ 77:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(5);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createReactClass = __webpack_require__(8);\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _propTypes = __webpack_require__(10);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _MenuEntity = __webpack_require__(72);\n\nvar _MenuEntity2 = _interopRequireDefault(_MenuEntity);\n\nvar _MenuItem = __webpack_require__(73);\n\nvar _MenuItem2 = _interopRequireDefault(_MenuItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TreeNode = (0, _createReactClass2.default)({\n  displayName: 'TreeNode',\n\n  propTypes: {\n    index: _propTypes2.default.object,\n    tree: _propTypes2.default.object,\n    home: _propTypes2.default.string,\n    dragging: _propTypes2.default.string,\n    onDragStart: _propTypes2.default.func,\n    onCollapse: _propTypes2.default.func,\n    getBaseUrl: _propTypes2.default.func,\n    clickHome: _propTypes2.default.func,\n    getSelectedNode: _propTypes2.default.func,\n    setSelectedNode: _propTypes2.default.func,\n    getSearchedNode: _propTypes2.default.func,\n    setSearchedNode: _propTypes2.default.func\n  },\n\n  renderChildren: function renderChildren() {\n    var props = this.props;\n    var index = props.index;\n    var tree = props.tree;\n    var dragging = props.dragging;\n    var home = props.home;\n    var getBaseUrl = props.getBaseUrl;\n    var onDragStart = props.onDragStart;\n    var isDragging = props.isDragging;\n\n    var isPlaceHolder = index.id === dragging || this.props.isPlaceHolder;\n    if (index.children && index.children.length) {\n      var childrenStyles = {};\n      var children = index.children;\n      if (index.collapsed) {\n        var searched = props.getSearchedNode();\n        if (searched === null || index.id != searched.menuId) {\n          childrenStyles.display = 'none';\n        } else {\n          index.collapsed = !index.collapsed;\n        }\n      }\n\n      var childNodes = children.map(function (child) {\n        var childIndex = tree.getIndex(child);\n        return _react2.default.createElement(TreeNode, {\n          tree: tree,\n          index: childIndex,\n          key: childIndex.id,\n\n          dragging: dragging,\n          home: home,\n\n          onDragStart: onDragStart,\n          isDragging: isDragging,\n          isPlaceHolder: isPlaceHolder,\n\n          clickHome: props.clickHome,\n\n          getSelectedNode: props.getSelectedNode,\n          setSelectedNode: props.setSelectedNode,\n\n          getSearchedNode: props.getSearchedNode,\n          setSearchedNode: props.setSearchedNode,\n\n          getBaseUrl: getBaseUrl\n        });\n      });\n\n      return _react2.default.createElement(\n        'div',\n        { className: cx({\n            'item-container': true,\n            move: isDragging\n          }), style: childrenStyles },\n        childNodes\n      );\n    }\n\n    return null;\n  },\n\n  render: function render() {\n    var props = this.props;\n    var index = props.index;\n    var home = props.home;\n    var node = index.node;\n\n    var isPlaceHolder = this.isPlaceHolder(props);\n\n    if (this.isMenuEntity(node)) {\n      return _react2.default.createElement(\n        'div',\n        { className: 'menu-type' },\n        _react2.default.createElement(_MenuEntity2.default, {\n          index: index,\n          getBaseUrl: props.getBaseUrl,\n          onCollapse: props.onCollapse\n        }),\n        this.renderChildren()\n      );\n    } else {\n      return _react2.default.createElement(\n        'div',\n        { className: cx({\n            node: true,\n            item: true,\n            copy: isPlaceHolder,\n            off: node.activated !== 1\n          }) },\n        _react2.default.createElement(_MenuItem2.default, {\n          index: index,\n          home: home,\n          getBaseUrl: props.getBaseUrl,\n          clickHome: props.clickHome,\n          mouseDown: this.handleMouseDown,\n\n          getSelectedNode: props.getSelectedNode,\n          setSelectedNode: props.setSelectedNode,\n\n          getSearchedNode: props.getSearchedNode,\n          setSearchedNode: props.setSearchedNode\n        }),\n        this.renderChildren()\n      );\n    }\n  },\n\n  handleMouseDown: function handleMouseDown(nodeId, dom, e) {\n    if (this.props.onDragStart) {\n      this.props.onDragStart(nodeId, dom, e);\n    }\n  },\n\n  isMenuEntity: function isMenuEntity(node) {\n    return node.entity && node.entity == 'menu';\n  },\n\n  isPlaceHolder: function isPlaceHolder(props) {\n    var index = props.index;\n    var dragging = props.dragging;\n    return index.id === dragging || props.isPlaceHolder;\n  }\n});\n\nexports.default = TreeNode;\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/core/menu/TreeNode.js\n// module id = 77\n// module chunks = 2\n\n//# sourceURL=webpack:///./resources/assets/core/menu/TreeNode.js?");

/***/ }),

/***/ 78:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(5);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createReactClass = __webpack_require__(8);\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _propTypes = __webpack_require__(10);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _TreeNode = __webpack_require__(77);\n\nvar _TreeNode2 = _interopRequireDefault(_TreeNode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = (0, _createReactClass2.default)({\n  displayName: 'UITree',\n\n  propTypes: {\n    tree: _propTypes2.default.object,\n    home: _propTypes2.default.string,\n\n    paddingLeft: _propTypes2.default.number,\n\n    getBaseUrl: _propTypes2.default.func,\n\n    clickHome: _propTypes2.default.func,\n\n    getSelectedNode: _propTypes2.default.func,\n    setSelectedNode: _propTypes2.default.func,\n\n    getSearchedNode: _propTypes2.default.func,\n    setSearchedNode: _propTypes2.default.func,\n\n    moveNode: _propTypes2.default.func\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      paddingLeft: 48\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return this.init(this.props);\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (!this._update) {\n      this.setState(this.init(nextProps));\n    } else {\n      this._update = false;\n    }\n  },\n\n  init: function init(props) {\n    var tree = props.tree;\n    tree.updateNodesPosition();\n\n    return {\n      tempTree: null,\n      tree: tree,\n      dragging: {\n        id: null,\n        x: null,\n        y: null,\n        w: null,\n        h: null,\n        originalParent: null,\n        targetParent: null\n      }\n    };\n  },\n\n  getDraggingDom: function getDraggingDom() {\n    var tree = this.state.tree;\n    var dragging = this.state.dragging;\n    var home = this.props.home;\n\n    if (dragging && dragging.id) {\n      var draggingIndex = tree.getIndex(dragging.id);\n      var draggingStyles = {\n        top: dragging.y,\n        left: dragging.x,\n        width: dragging.w\n      };\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'm-draggable move', style: draggingStyles },\n        _react2.default.createElement(_TreeNode2.default, {\n          getBaseUrl: this.props.getBaseUrl,\n          clickHome: this.props.clickHome,\n          getSelectedNode: this.props.getSelectedNode,\n          setSelectedNode: this.props.setSelectedNode,\n          getSearchedNode: this.props.getSearchedNode,\n          setSearchedNode: this.props.setSearchedNode,\n          tree: tree,\n          home: home,\n          index: draggingIndex,\n          key: dragging.id,\n          isDragging: true\n        })\n      );\n    }\n\n    return null;\n  },\n\n  render: function render() {\n    var tree = this.state.tree;\n    var dragging = this.state.dragging;\n    var draggingDom = this.getDraggingDom();\n    var _this = this;\n    var home = this.props.home;\n\n    var rootIndex = tree.getIndex(0);\n\n    var treeItems = rootIndex.children.map(function (data) {\n      return _react2.default.createElement(_TreeNode2.default, {\n        tree: tree,\n        home: home,\n        index: tree.getIndex(data),\n        getBaseUrl: _this.props.getBaseUrl,\n        clickHome: _this.props.clickHome,\n\n        getSelectedNode: _this.props.getSelectedNode,\n        setSelectedNode: _this.props.setSelectedNode,\n\n        getSearchedNode: _this.props.getSearchedNode,\n        setSearchedNode: _this.props.setSearchedNode,\n\n        key: data,\n\n        onDragStart: _this.dragStart,\n        onCollapse: _this.toggleCollapse,\n        dragging: dragging && dragging.id,\n        isDragging: false\n      });\n    });\n\n    return _react2.default.createElement(\n      'div',\n      { className: 'menu-content', id: 'uitree' },\n      draggingDom,\n      treeItems\n    );\n  },\n\n  dragStart: function dragStart(id, dom, e) {\n    var tree = this.state.tree;\n    var node = tree.get(id);\n    if (node.entity && node.entity == 'menu') return;\n    this.setState({\n      tempTree: new Tree(tree.obj)\n    });\n\n    this.dragging = {\n      id: id,\n      w: dom.offsetWidth,\n      h: dom.offsetHeight,\n      x: dom.offsetLeft,\n      y: dom.offsetTop,\n      originalParent: tree.get(id).parentId,\n      targetParent: tree.get(id).parentId,\n      originalOrdering: tree.get(id).ordering,\n      lastOrdering: tree.get(id).ordering\n    };\n\n    this._startX = dom.offsetLeft;\n    this._startY = dom.offsetTop;\n    this._offsetX = e.clientX;\n    this._offsetY = e.clientY;\n    this._start = true;\n\n    document.body.addEventListener('keydown', this.dragStop);\n    document.body.addEventListener('mousemove', this.drag);\n    document.body.addEventListener('mouseup', this.dragEnd);\n  },\n\n  drag: function drag(e) {\n    if (this._start) {\n      this.setState({\n        dragging: this.dragging\n      });\n      this._start = false;\n    }\n\n    var tree = this.state.tree;\n    var dragging = this.state.dragging;\n    var paddingLeft = this.props.paddingLeft;\n    var newIndex = null;\n    var index = tree.getIndex(dragging.id);\n    var collapsed = index.collapsed;\n\n    var _startX = this._startX;\n    var _startY = this._startY;\n    var _offsetX = this._offsetX;\n    var _offsetY = this._offsetY;\n\n    var pos = {\n      x: _startX + e.clientX - _offsetX,\n      y: _startY + e.clientY - _offsetY\n    };\n    dragging.x = pos.x;\n    dragging.y = pos.y;\n\n    var diffX = dragging.x - paddingLeft / 2 - (index.left - 3) * paddingLeft;\n    var diffY = dragging.y - dragging.h / 2 - (index.top - 2) * dragging.h;\n\n    if (index.depth == 2 && diffX < 0) diffX = 0;\n    if (diffX < 0) {\n      // left\n      if (index.parent && !index.next) {\n        newIndex = tree.move(index.id, index.parent, 'after');\n      }\n    } else if (diffX > paddingLeft) {\n      // right\n      if (index.prev && !tree.getIndex(index.prev).collapsed) {\n        newIndex = tree.move(index.id, index.prev, 'append');\n      }\n    }\n\n    if (newIndex) {\n      index = newIndex;\n      newIndex.collapsed = collapsed;\n      dragging.id = newIndex.id;\n    }\n\n    if (diffY < 0) {\n      // up\n      var above = tree.getNodeByTop(index.top - 1);\n      newIndex = tree.move(index.id, above.id, 'before');\n    } else if (diffY > dragging.h) {\n      // down\n      var below;\n      if (index.next) {\n        below = tree.getIndex(index.next);\n        if (below.children && below.children.length && !below.collapsed) {\n          newIndex = tree.move(index.id, index.next, 'prepend');\n        } else {\n          newIndex = tree.move(index.id, index.next, 'after');\n        }\n      } else {\n        below = tree.getNodeByTop(index.top + index.height);\n        if (below && below.parent !== index.id) {\n          if (below.children && below.children.length) {\n            newIndex = tree.move(index.id, below.id, 'prepend');\n          } else {\n            newIndex = tree.move(index.id, below.id, 'after');\n          }\n        }\n      }\n    }\n\n    if (newIndex) {\n      newIndex.collapsed = collapsed;\n      dragging.id = newIndex.id;\n      var newParent = tree.get(newIndex.parent);\n      dragging.targetParent = newParent.id;\n      dragging.lastOrdering = newIndex.ordering;\n      dragging.children = newIndex.children;\n    }\n\n    this.setState({\n      tree: tree,\n      dragging: dragging\n    });\n  },\n\n  dragStop: function dragStop(e) {\n\n    var Keys = {\n      ENTER: 13,\n      TAB: 9,\n      BACKSPACE: 8,\n      UP_ARROW: 38,\n      DOWN_ARROW: 40,\n      ESCAPE: 27\n    };\n\n    if (e.keyCode === Keys.ESCAPE) {\n      e.preventDefault();\n    }\n\n    this.rollbackTree();\n\n    document.body.removeEventListener('mousemove', this.drag);\n    document.body.removeEventListener('mouseup', this.dragEnd);\n    document.body.removeEventListener('keydown', this.dragStop);\n  },\n\n  dragEnd: function dragEnd() {\n    this.setState({\n      tempTree: null,\n      dragging: {\n        id: null,\n        x: null,\n        y: null,\n        w: null,\n        h: null,\n        originalParent: null,\n        targetParent: null\n      }\n    });\n\n    var dragging = this.dragging;\n\n    if (dragging.originalParent == dragging.targetParent) {\n      if (dragging.originalOrdering != dragging.lastOrdering) {\n        var targetNode = this.state.tree.get(dragging.id);\n        if (targetNode.entity != 'menu') this.props.moveNode({\n          id: dragging.id,\n          parent: dragging.targetParent,\n          position: dragging.lastOrdering\n        });\n      }\n    } else {\n      if (dragging.children.length > 0) {\n        this.props.moveNode({\n          id: dragging.id,\n          parent: dragging.targetParent,\n          position: dragging.lastOrdering,\n          children: dragging.children\n        });\n      } else {\n        this.props.moveNode({\n          id: dragging.id,\n          parent: dragging.targetParent,\n          position: dragging.lastOrdering\n        });\n      }\n    }\n\n    document.body.removeEventListener('mousemove', this.drag);\n    document.body.removeEventListener('mouseup', this.dragEnd);\n    document.body.removeEventListener('keydown', this.dragStop);\n  },\n\n  rollbackTree: function rollbackTree() {\n\n    var rollbackTree = this.state.tempTree;\n    if (!rollbackTree) return;\n    var currentProps = this.props;\n    currentProps.tree = rollbackTree;\n    this.setState(this.init(currentProps));\n\n    this.setState({\n      tree: rollbackTree,\n      dragging: {\n        id: null,\n        x: null,\n        y: null,\n        w: null,\n        h: null,\n        originalParent: null,\n        targetParent: null\n      }\n    });\n  },\n\n  toggleCollapse: function toggleCollapse(nodeId) {\n    var tree = this.state.tree;\n    var index = tree.getIndex(nodeId);\n    var node = tree.get(nodeId);\n\n    index.collapsed = !index.collapsed;\n    node.collapsed = !node.collapsed;\n\n    tree.updateNodesPosition();\n    this.setState({\n      tree: tree\n    });\n  }\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/assets/core/menu/UITree.js\n// module id = 78\n// module chunks = 2\n\n//# sourceURL=webpack:///./resources/assets/core/menu/UITree.js?");

/***/ }),

/***/ 8:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n\n\nvar React = __webpack_require__(5);\nvar factory = __webpack_require__(28);\n\n// Hack to grab NoopUpdateQueue from isomorphic React\nvar ReactNoopUpdateQueue = new React.Component().updater;\n\nmodule.exports = factory(\n  React.Component,\n  React.isValidElement,\n  ReactNoopUpdateQueue\n);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/create-react-class/index.js\n// module id = 8\n// module chunks = 1 2 4\n\n//# sourceURL=webpack:///./~/create-react-class/index.js?");

/***/ })

},[356]);